JPA中有持久化上下文存在，但是开发者不直接与之打交道，持久化上下文在应用程序中是透明的。

持久化上下文特性：
    持久化上下文的生命周期与系统事务一致
    持久化上下文提供自动脏检查
    持久化上下文是一级缓存


我们可以把持久化上下文理解成一个Map，该Map在事务开始的时候创建，在事务结束的时候销毁。在事务中，可以把对象关联到持久化上下文中，
比如说findById方法，在查出来的时候，这个对象就跟持久化上下文关联起来了，可以理解成于放入Map中。

自动脏检查：
在事务提交的时候，JPA会执行一个脏检查机制，会检查持久化上下文中的对象状态和数据库中的状态是否一致，如果不一致，
就会根据持久化上下文中的状态去更新数据库中的状态。但是这个动作只有在数据库事务提交的时候在会做，如果事务回滚了，不会做这个动作。

可以调用JpaRepository提供的flush或saveAndFlush方法立刻同步状态到数据库，而不是等到事务提交的时候在同步。需要注意的是，这里的立刻同步到数据库
是指将修改/删除操作所执行的SQL语句先执行，此时事务并没有提交，只有在事务提交后，这个更新/删除才会起作用。

一级缓存：
在事务中查询时，首先会在持久化上下文中查找。只有在执行findById方法的时候，才会使用。


注意：
@Query+@Modifying进行操作对象时，持久化上下文中的对象不会受到影响








