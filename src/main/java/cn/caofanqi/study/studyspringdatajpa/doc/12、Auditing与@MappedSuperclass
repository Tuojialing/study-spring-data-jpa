1、Auditing
    一般我们针对一张表的操作需要记录下来，是谁修改的，修改时间是什么，Spring-Data为我们提供了支持。
    1.1、在实体类中使用Spring-Data为我们提供的四个注解（也可以选择实现Auditable接口或继承AbstractAuditable类，推荐使用注解）
    1.2、在实体上添加@EntityListeners(value = AuditingEntityListener.class)启动对当前实体的监听。
    1.3、如果在实体中使用了@CreatedBy或者@LastModifiedBy需要实现AuditorAware<T>接口，告诉Spring-Data当前审计用户是谁。（一般项目中从spring security或token中获取）
    1.4、在启动类上添加@EnableJpaAuditing启动审计功能。
    1.5、如果ApplicationContext中只有一个AuditorAware类型的bean，Spring-Date会自动选择，如果又多个，需要通过@EnableJpaAuditing注解的auditorAwareRef属性进行设置。


2、@MappedSuperclass
    指定其映射信息应用于从其继承的实体的类。映射的超类没有为其定义单独的表。
    与MappedSuperclass注释指定的类可以以与实体相同的方式映射，除了映射仅适用于它的子类之外，因为映射超类本身不存在表。当应用于子类时，继承的映射将应用于子类表的上下文中。
    （说白了，就是将各实体中相同的属性提取到一个添加该注解的父类中，父类不会生成对应的表，但是各子实体类生成的对应表不变。）

    这样我们就可以将通用的ID和Auditing相关的属性提取出来。

3、Auditing原理
    是通过JPA提供的@EntityListeners和@PrePersist、@PreUpdate来完成的。

    @EntityListeners，指定要用于实体或映射超类的回调侦听器类。此注释可以应用于实体类或映射的超类。
        属性：value，回调侦听器类。
    已下注解为相应的生命周期事件指定回调方法。此注释可以应用于实体类、映射超类或回调侦听器类的方法。都是同步机制使用时要注意，可以在使用时，可以在方法中开启异步线程或消息队列。
    @PrePersist，新增之前；@PostPersist，新增之后。
    @PreUpdate，更新之前；@PostUpdate，更新之后。
    @PreRemove,删除之前；@PostRemove，删除之后。
    @PostLoad，加载之后。



